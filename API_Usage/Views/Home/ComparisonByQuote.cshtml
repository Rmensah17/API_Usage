@model EQComparison

@{
    // ViewData["Title"] = "ComparisonByQuote";
   // Layout = null;
}
<html>
<head>
    <style>
        body {
            width: 90%;
            margin: 0 auto;
        }

        table:first-child {
            background-color: beige;
            color: white;
            margin-right: 1%;
        }

        table:nth-child(2n) {
            background-color: beige;
            color: black;
        }

        table {
            width: 49%;
            float: left;
        }
    </style>
</head>
<h2>Comparison By Quote</h2>

<h4>This page allows you to compare two quote data between two symbols</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ComparisonByQuote" method="get">
            <p> ***To get a list of the symbols please click on the Symbols tab</p>
            <p> Symbol 1: <input type="text" id="txtName" name="symbol1" /></p>
            <p> Symbol 2: <input type="text" id="txtName2" name="symbol2" /></p>
            <input type="submit" value="Compare" class="btn btn-default" />
            <p>The chart below is comparing the two symbols below @DateTime.Now</p>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
            </div>
        </form>
    </div>
</div>
<body>
<table align="center" border="1" style="margin: 0px auto;">
    <thead>
        <tr>
            <th>
                Company Name
            </th>
            <th>
                IEX RealTime Price
            </th>
            <th>
                Sector
            </th>
            <th>
                QuoteId
            </th>
        </tr>
    </thead>

    <tbody  align="center" style="margin: 0px auto;">

        @foreach (var item in Model.FirstQuote)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.companyname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.iexRealtimePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sector)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuoteId)
                </td>
            </tr>
        }
</table>

<table align="center" border="1" style="margin: 0px auto;">
    <thead>
        <tr>
            <th>
                Company Name
            </th>
            <th>
                IEX RealTime Price
            </th>
            <th>
                Sector
            </th>
            <th>
                QuoteId
            </th>
        </tr>
    </thead>

    <tbody  align="center" style="margin: 0px auto;">

        @foreach (var item in Model.SecondQuote)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.companyname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.iexRealtimePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sector)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuoteId)
                </td>
            </tr>
        }
</table>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
    </body>>
</html>